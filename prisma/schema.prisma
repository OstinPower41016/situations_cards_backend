generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RoomStatus {
  CREATED        @map("CREATED")
  READY_TO_START @map("READY_TO_START")
  IN_GAME        @map("IN_GAME")
  INACTIVE       @map("INACTIVE")
}

enum UserStatus {
  OFFLINE                  @map("OFFLINE")
  ONLINE                   @map("ONLINE")
  READY_TO_START           @map("READY_TO_START")
  THINKING                 @map("THINKING")
  REAREADY_OTHER_PLAYERSDY @map("READY_OTHER_PLAYERS")
}

model Room {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  name               String     @unique
  private            Boolean    @default(false)
  participants       User[]
  status             RoomStatus @default(CREATED)
  currentLeaderId    String     @db.ObjectId
  leaderQuestions    Question[]
  selectedQuestionId String?    @db.ObjectId
  selectedAnswers    Card[]
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  nickname  String     @unique
  guest     Boolean    @default(false)
  status    UserStatus @default(ONLINE)
  room      Room?      @relation(fields: [roomId], references: [id])
  roomId    String?    @db.ObjectId
  cards     Card[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Card {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  Room        Room?   @relation(fields: [roomId], references: [id])
  roomId      String? @db.ObjectId
  User        User?   @relation(fields: [userId], references: [id])
  userId      String? @db.ObjectId
}

model Question {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String

  Room   Room?   @relation(fields: [roomId], references: [id])
  roomId String? @db.ObjectId
}
